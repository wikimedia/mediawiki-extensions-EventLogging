#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
  json2sql
  --------
  Consume JSON event stream into MySQL

  usage: json2sql [-h] [--sid SID] input db

  positional arguments:
    input       URI of JSON event stream to consume
    db          URI of DB to write to

  optional arguments:
    -h, --help  show this help message and exit
    --sid SID   set input socket identity

  :copyright: (c) 2012 by Ori Livneh <ori@wikimedia.org>
  :license: GNU General Public Licence 2.0 or later

"""
from __future__ import division

import argparse
import logging
import sys

import eventlogging
import sqlalchemy


parser = argparse.ArgumentParser(description='JSON event stream -> MySQL')
parser.add_argument('input', help='URI of JSON event stream to consume')
parser.add_argument('db', help='URI of DB to write to')
parser.add_argument('--sid', help='set input socket identity')
args = parser.parse_args()

logging.basicConfig(stream=sys.stderr, level=logging.DEBUG)
logging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)

meta = sqlalchemy.MetaData(args.db)

sub = eventlogging.zmq_subscribe(args.input, sid=args.sid, json=True)

while 1:
    # Optimization: keep ``try/except`` block outside the inner loop.
    try:
        for ev in sub:
            logging.info(ev)
            eventlogging.store_event(meta, ev)
    except Exception:
        logging.exception('Unable to insert event: %s', ev)
