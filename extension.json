{
	"name": "EventLogging",
	"author": [
		"Ori Livneh",
		"Timo Tijhof",
		"S Page",
		"Matthew Flaschen"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:EventLogging",
	"descriptionmsg": "eventlogging-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "other",
	"requires": {
		"MediaWiki": ">= 1.43"
	},
	"namespaces": [
		{
			"id": 470,
			"constant": "NS_SCHEMA",
			"name": "Schema",
			"defaultcontentmodel": "JsonSchema",
			"protection": [
				"autoconfirmed"
			],
			"conditional": true
		},
		{
			"id": 471,
			"constant": "NS_SCHEMA_TALK",
			"name": "Schema_talk",
			"conditional": true
		}
	],
	"DefaultUserOptions": {
		"eventlogging-display-web": 0,
		"eventlogging-display-console": 0
	},
	"ContentHandlers": {
		"JsonSchema": "MediaWiki\\Extension\\EventLogging\\JsonSchemaContentHandler"
	},
	"ExtensionFunctions": [
		"MediaWiki\\Extension\\EventLogging\\Hooks::onSetup"
	],
	"MessagesDirs": {
		"EventLogging": [
			"i18n/core"
		],
		"JsonSchema": [
			"i18n/jsonschema"
		]
	},
	"ExtensionMessagesFiles": {
		"EventLoggingNamespaces": "EventLogging.namespaces.php"
	},
	"AutoloadClasses": {
		"EventLogging": "includes/EventLogging.php",
		"JsonSchemaException": "includes/Libs/JsonSchemaValidation/JsonSchemaException.php",
		"MediaWiki\\Extension\\EventLogging\\EventLogging": "includes/EventLogging.php",
		"MediaWiki\\Extension\\EventLogging\\Libs\\JsonSchemaValidation\\JsonSchemaException": "includes/Libs/JsonSchemaValidation/JsonSchemaException.php",
		"MediaWiki\\Extension\\EventLogging\\Libs\\Legacy\\EventLoggingLegacyConverter": "includes/Libs/Legacy/EventLoggingLegacyConverter.php",
		"MediaWiki\\Extension\\EventLogging\\Libs\\UserBucketProvider\\UserBucketProvider": "includes/Libs/UserBucketProvider/UserBucketProvider.php",
		"UserBucketProvider": "includes/Libs/UserBucketProvider/UserBucketProvider.php"
	},
	"AutoloadNamespaces": {
		"MediaWiki\\Extension\\EventLogging\\": "includes/"
	},
	"ResourceModules": {
		"ext.eventLogging": {
			"localBasePath": "modules",
			"remoteExtPath": "EventLogging/modules",
			"packageFiles": [
				"ext.eventLogging/subscriber.js",
				"ext.eventLogging/core.js",
				"ext.eventLogging/Schema.js",
				"ext.eventLogging/BackgroundQueue.js",
				{
					"name": "ext.eventLogging/data.json",
					"callback": "MediaWiki\\Extension\\EventLogging\\Hooks::getModuleData"
				},
				"lib/metrics-platform/ContextUtils.js",
				"lib/metrics-platform/ContextController.js",
				"lib/metrics-platform/CurationController.js",
				"lib/metrics-platform/DefaultEventSubmitter.js",
				"lib/metrics-platform/Instrument.js",
				"lib/metrics-platform/MetricsClient.js",
				"lib/metrics-platform/SamplingController.js",
				"lib/metrics-platform/StreamConfigUtils.js",
				"ext.eventLogging/MediaWikiMetricsClientIntegration.js",
				"ext.eventLogging/EventSubmitter.js"
			],
			"dependencies": [
				"mediawiki.user",
				"user.options"
			]
		},
		"ext.eventLogging.debug": {
			"localBasePath": "modules/ext.eventLogging.debug/",
			"remoteExtPath": "EventLogging/modules/ext.eventLogging.debug/",
			"packageFiles": [
				"debug.js",
				{
					"name": "data.json",
					"config": [
						"EventLoggingSchemaApiUri"
					]
				}
			]
		},
		"ext.eventLogging.jsonSchema": {
			"scripts": "modules/ext.eventLogging.jsonSchema/jsonSchema.js"
		},
		"ext.eventLogging.jsonSchema.styles": {
			"styles": "modules/ext.eventLogging.jsonSchema.styles/jsonSchema.css"
		}
	},
	"ForeignResourcesDir": "modules/lib",
	"ResourceFileModulePaths": {
		"localBasePath": "",
		"remoteExtPath": "EventLogging"
	},
	"QUnitTestModule": {
		"localBasePath": "",
		"remoteExtPath": "EventLogging",
		"scripts": [
			"tests/qunit/ext.eventLogging/BackgroundQueue.test.js",
			"tests/qunit/ext.eventLogging/bucketing.test.js",
			"tests/qunit/ext.eventLogging/id.test.js",
			"tests/qunit/ext.eventLogging/log.test.js",
			"tests/qunit/ext.eventLogging/stream.test.js",
			"tests/qunit/ext.eventLogging/utils.test.js",
			"tests/qunit/ext.eventLogging/MediaWikiMetricsClientIntegration.test.js",
			"tests/qunit/ext.eventLogging.debug/debug.test.js"
		],
		"dependencies": [
			"ext.eventLogging",
			"ext.eventLogging.debug"
		]
	},
	"Hooks": {
		"CanonicalNamespaces": "main",
		"BeforePageDisplay": [
			"main",
			"jsonschema"
		],
		"GetPreferences": "main",
		"CodeEditorGetPageLanguage": "MediaWiki\\Extension\\EventLogging\\JsonSchemaHooks::onCodeEditorGetPageLanguage",
		"EditFilterMergedContent": "jsonschema",
		"MovePageIsValidMove": "jsonschema",
		"ApiMain::moduleManager": "jsonschema"
	},
	"HookHandlers": {
		"main": {
			"class": "MediaWiki\\Extension\\EventLogging\\Hooks",
			"services": [
				"UserOptionsLookup"
			]
		},
		"jsonschema": {
			"class": "MediaWiki\\Extension\\EventLogging\\JsonSchemaHooks"
		}
	},
	"config": {
		"EventLoggingBaseUri": {
			"value": false,
			"description": "Legacy EventLogging GET URI."
		},
		"EventLoggingSchemaApiUri": {
			"value": "https://meta.wikimedia.org/w/api.php"
		},
		"EventLoggingDBname": {
			"value": "metawiki"
		},
		"EventLoggingSchemas": {
			"value": [],
			"description": "Legacy schemas EventLogging will produce. This is a mapping from schema name to on-wiki schema revision, or a $schema URI.  If a $schema URI is set, the event will be passed to mw.eventLog.submit and the event intake service at EventLoggingServiceUri will be used."
		},
		"EventLoggingServiceUri": {
			"value": false,
			"description": "URI to event intake service.  This should look something like http://localhost:8192/v1/events"
		},
		"EventLoggingStreamNames": {
			"value": false,
			"description": "List of stream names to register for use by EventLogging from wgEventStreams.  If this is false, Event Stream Config will not be used, and EventLogging will produce any stream it is given."
		},
		"EventLoggingQueueLingerSeconds": {
			"value": 30,
			"description": "Number of seconds EventLogging should wait to batch messages before sending them to the intake service."
		}
	},
	"load_composer_autoloader": true,
	"manifest_version": 2,
	"ServiceWiringFiles": [
		"ServiceWiring.php"
	]
}
